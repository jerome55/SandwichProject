@using ClientProject.Models
@model IEnumerable<ClientProject.Models.Employee>

@{
    ViewData["Title"] = "Liste des employés";
}

<h2>Liste des employés</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Wallet)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Wallet)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Modifier</a> |
                <a asp-action="AddToWallet" asp-route-id="@item.Id">Créditer</a>
            </td>
        </tr>
}
    </tbody>
</table>
<p style="text-align:right">
    <a asp-action="Create">Créer un nouvel employé</a>
</p>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}